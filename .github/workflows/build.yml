name: Build and Push ImmortalWrt Docker Image

on:
  push:
    branches: [ "main" ]
  schedule: # 添加定时触发
    - cron: '0 1 * * *'  # 每天凌晨 1 点（UTC 时间）
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
     # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v3
      # 设置 PACKAGES 环境变量
      - name: Load packages.config to environment
        id: set-packages-env
        run: |
          PACKAGES=$(tr '\n' ' ' < packages.config)
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

      # 2. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. 下载并解压 ImageBuilder
      - name: Download ImageBuilder
        run: |
          wget https://downloads.immortalwrt.org/releases/23.05-SNAPSHOT/targets/bcm27xx/bcm2711/immortalwrt-imagebuilder-23.05-SNAPSHOT-bcm27xx-bcm2711.Linux-x86_64.tar.xz
          tar -xJf immortalwrt-imagebuilder-23.05-SNAPSHOT-bcm27xx-bcm2711.Linux-x86_64.tar.xz

      - name: Configure ImageBuilder
        run: |
          cd immortalwrt-imagebuilder-23.05-SNAPSHOT-bcm27xx-bcm2711.Linux-x86_64
          # 启用 CONFIG_TARGET_ROOTFS_TARGZ
          sed -i '/^# CONFIG_TARGET_ROOTFS_TARGZ is not set/d' .config
          echo "CONFIG_TARGET_ROOTFS_TARGZ=y" >> .config

          # 禁用 CONFIG_TARGET_ROOTFS_EXT4FS
          sed -i 's/^CONFIG_TARGET_ROOTFS_EXT4FS=y/# CONFIG_TARGET_ROOTFS_EXT4FS=y/' .config

          # 禁用 CONFIG_TARGET_ROOTFS_SQUASHFS
          sed -i 's/^CONFIG_TARGET_ROOTFS_SQUASHFS=y/# CONFIG_TARGET_ROOTFS_SQUASHFS=y/' .config
          
          # 复制配置文件
          cp -rf $GITHUB_WORKSPACE/files .

          # 下载onmyzsh
          chmod +x $GITHUB_WORKSPACE/scripts/*
          $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh
          
          #下载istore仓库
          wget -P packages https://istore.linkease.com/repo/all/store/luci-app-store_xxx.ipk
          wget -P packages https://istore.linkease.com/repo/all/store/luci-lib-taskd_xxx.ipk
          wget -P packages https://istore.linkease.com/repo/all/store/luci-lib-xterm_xxx.ipk
          wget -P packages https://istore.linkease.com/repo/all/store/taskd_xxx.ipk
          ls -l packages/

      # 4. 编译固件
      - name: Compile ImmortalWrt
        working-directory: immortalwrt-imagebuilder-23.05-SNAPSHOT-bcm27xx-bcm2711.Linux-x86_64
        run: |
          make image PACKAGES="$PACKAGES" FILES="files"

      # 5. 解压生成的 rootfs.tar.gz 到构建上下文
      - name: Prepare Docker Context
        run: |
          mkdir -p docker-context
          tar -xvf immortalwrt-imagebuilder-23.05-SNAPSHOT-bcm27xx-bcm2711.Linux-x86_64/bin/targets/bcm27xx/bcm2711/*rootfs.tar.gz -C docker-context

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. 构建并推送 Docker 镜像
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          platforms: linux/${{ secrets.TARGET_ARCH }}
          context: ./docker-context
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REGISTRY }}:latest
